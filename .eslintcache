[{"C:\\Users\\fidow\\OneDrive\\Documents\\jobs-api\\src\\components\\JobList.js":"1","C:\\Users\\fidow\\OneDrive\\Documents\\jobs-api\\src\\components\\JobsDetails.js":"2","C:\\Users\\fidow\\OneDrive\\Documents\\jobs-api\\src\\components\\useFetch.js":"3","C:\\Users\\fidow\\OneDrive\\Documents\\jobs-api\\src\\App.js":"4","C:\\Users\\fidow\\OneDrive\\Documents\\jobs-api\\src\\components\\Home.js":"5","C:\\Users\\fidow\\OneDrive\\Documents\\jobs-api\\src\\components\\Contact.js":"6","C:\\Users\\fidow\\OneDrive\\Documents\\jobs-api\\src\\reportWebVitals.js":"7","C:\\Users\\fidow\\OneDrive\\Documents\\jobs-api\\src\\components\\Loading.js":"8","C:\\Users\\fidow\\OneDrive\\Documents\\jobs-api\\src\\components\\Navbar.js":"9","C:\\Users\\fidow\\OneDrive\\Documents\\jobs-api\\src\\index.js":"10"},{"size":3067,"mtime":1612334691768,"results":"11","hashOfConfig":"12"},{"size":1924,"mtime":1612334686269,"results":"13","hashOfConfig":"12"},{"size":1258,"mtime":1612333201660,"results":"14","hashOfConfig":"12"},{"size":907,"mtime":1612318582355,"results":"15","hashOfConfig":"12"},{"size":1059,"mtime":1612334795907,"results":"16","hashOfConfig":"12"},{"size":218,"mtime":1612161667320,"results":"17","hashOfConfig":"12"},{"size":362,"mtime":1608141825363,"results":"18","hashOfConfig":"12"},{"size":439,"mtime":1612331198203,"results":"19","hashOfConfig":"12"},{"size":1422,"mtime":1612162830120,"results":"20","hashOfConfig":"12"},{"size":500,"mtime":1608141825363,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},"m7l65n",{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"C:\\Users\\fidow\\OneDrive\\Documents\\jobs-api\\src\\components\\JobList.js",["46","47","48"],"import { useState, useEffect } from \"react\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Loading from \"./Loading\";\r\n\r\nimport useFetch from \"./useFetch\";\r\n\r\n//const JobList = (jobs or data?) =>{}\r\nconst JobList = () => {\r\n  const jobTitiles = \"Latest Jobs from Github API\";\r\n  const { data: jobs, isLoading, error } = useFetch(\r\n    \"https://cors-anywhere.herokuapp.com/https://jobs.github.com/positions.json\"\r\n  );\r\n\r\n  return (\r\n    <section className=\"job--lists\">\r\n      {isLoading ? (\r\n        <Loading />\r\n      ) : (\r\n        <div className=\"container\">\r\n          <h1 className=\"text-danger\">\r\n            {jobTitiles}\r\n            <small\r\n              className=\"text-muted float-right mt-4\"\r\n              style={{ fontSize: \"12px\" }}\r\n            >\r\n              # of Available Github Jobs &nbsp;\r\n              <span className=\"text-primary\">{jobs.length}</span> &nbsp; | Built\r\n              with React js library & axios | By\r\n              <Link to=\"http://mahmoudosman.com/\"> Mahmoud Osman</Link>\r\n            </small>\r\n          </h1>\r\n          <hr />\r\n          <br />\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              {jobs.map((job) => (\r\n                <div className=\"jobs_data\" key={job.id}>\r\n                  <ul className=\"list-group mb-2\">\r\n                    <li className=\"list-group-item\">\r\n                      <p className=\"text-muted\">\r\n                        <img src={job.company_logo} alt={job.company} /> &nbsp;\r\n                        <Link to={`/jobs/${job.id}`}>{job.title}</Link> | &nbsp;\r\n                        <span className=\"text-muted\">{job.type}</span> | &nbsp;\r\n                        <span className=\"text-muted\">\r\n                          {new Date(job.created_at).toLocaleDateString()}\r\n                        </span>\r\n                        &nbsp; | {job.company} &nbsp; | &nbsp;\r\n                        <span className=\"text-muted\">{job.location}</span>{\" \"}\r\n                        &nbsp; |\r\n                        <Link\r\n                          to={job.url}\r\n                          className=\"text-danger ml-2 font-weight-bold\"\r\n                          target=\"_blank\"\r\n                          rel=\"noopener noreferrer\"\r\n                        >\r\n                          <strong>Apply</strong>\r\n                        </Link>\r\n                      </p>\r\n                      <p>\r\n                        <ReactMarkdown source={job.how_to_apply} />\r\n                      </p>\r\n                      <p>\r\n                        <Link\r\n                          to={`/jobs/${job.id}`}\r\n                          className=\"text-info font-weight-bold\"\r\n                        >\r\n                          Read More...\r\n                        </Link>\r\n                      </p>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default JobList;\r\n","C:\\Users\\fidow\\OneDrive\\Documents\\jobs-api\\src\\components\\JobsDetails.js",["49"],"// import { useState, useEffect } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport Loading from \"./Loading\";\r\nimport useFetch from \"./useFetch\";\r\n\r\nconst JobsDetails = () => {\r\n  const jobsDetailsTitle = \"Job Details\";\r\n  const { id, title } = useParams();\r\n\r\n  const { data: job, error, isLoading } = useFetch(\r\n    \"https://cors-anywhere.herokuapp.com/https://jobs.github.com/positions.json\" +\r\n      id\r\n  );\r\n\r\n  return (\r\n    <section className=\"jobs--details\">\r\n      {isLoading ? (\r\n        <Loading />\r\n      ) : (\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <h2 className=\"text-info mt-3\">\r\n                {jobsDetailsTitle}\r\n                <Link to=\"/\" className=\"text-secondary\">\r\n                  <i\r\n                    className=\"fa fa-chevron-left pull-right\"\r\n                    title=\"Go back\"\r\n                  ></i>\r\n                </Link>\r\n              </h2>\r\n              <hr />\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-10\">\r\n              <p>description</p>\r\n              Job ID: {id}\r\n              <h2>{job.title}</h2>\r\n              <p>{job.type}</p>\r\n              <p>{job.body}</p>\r\n            </div>\r\n            <div className=\"col-md-2\">\r\n              <Link to=\"#\" className=\"text-danger font-weight-bold\">\r\n                Apply\r\n              </Link>\r\n            </div>\r\n          </div>\r\n\r\n          {error && (\r\n            <div\r\n              className=\"alert alert-danger\"\r\n              style={{ marginTop: \"9rem\", textAlign: \"center\" }}\r\n            >\r\n              <strong>\r\n                <i className=\"fa fa-warning mr-1\"></i>\r\n                {error}\r\n              </strong>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default JobsDetails;\r\n",["50","51"],"C:\\Users\\fidow\\OneDrive\\Documents\\jobs-api\\src\\components\\useFetch.js",[],"C:\\Users\\fidow\\OneDrive\\Documents\\jobs-api\\src\\App.js",[],"C:\\Users\\fidow\\OneDrive\\Documents\\jobs-api\\src\\components\\Home.js",["52","53","54"],"C:\\Users\\fidow\\OneDrive\\Documents\\jobs-api\\src\\components\\Contact.js",[],["55","56"],"C:\\Users\\fidow\\OneDrive\\Documents\\jobs-api\\src\\reportWebVitals.js",[],"C:\\Users\\fidow\\OneDrive\\Documents\\jobs-api\\src\\components\\Loading.js",[],"C:\\Users\\fidow\\OneDrive\\Documents\\jobs-api\\src\\components\\Navbar.js",[],"C:\\Users\\fidow\\OneDrive\\Documents\\jobs-api\\src\\index.js",[],{"ruleId":"57","severity":1,"message":"58","line":1,"column":10,"nodeType":"59","messageId":"60","endLine":1,"endColumn":18},{"ruleId":"57","severity":1,"message":"61","line":1,"column":20,"nodeType":"59","messageId":"60","endLine":1,"endColumn":29},{"ruleId":"57","severity":1,"message":"62","line":11,"column":34,"nodeType":"59","messageId":"60","endLine":11,"endColumn":39},{"ruleId":"57","severity":1,"message":"63","line":8,"column":15,"nodeType":"59","messageId":"60","endLine":8,"endColumn":20},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"57","severity":1,"message":"58","line":1,"column":10,"nodeType":"59","messageId":"60","endLine":1,"endColumn":18},{"ruleId":"57","severity":1,"message":"61","line":1,"column":20,"nodeType":"59","messageId":"60","endLine":1,"endColumn":29},{"ruleId":"57","severity":1,"message":"68","line":7,"column":23,"nodeType":"59","messageId":"60","endLine":7,"endColumn":32},{"ruleId":"64","replacedBy":"69"},{"ruleId":"66","replacedBy":"70"},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'error' is assigned a value but never used.","'title' is assigned a value but never used.","no-native-reassign",["71"],"no-negated-in-lhs",["72"],"'isLoading' is assigned a value but never used.",["71"],["72"],"no-global-assign","no-unsafe-negation"]